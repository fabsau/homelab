[gdrive_0]
type = drive
scope = drive
use_trash = false
server_side_across_configs = true
chunk_size = 128M
acknowledge_abuse = true
pacer_min_sleep = 1ms
pacer_burst = 5000
team_drive = {{ RCLONE_GDRIVE_0_DRIVE_ID }}
{% if ansible_hostname == "nas" %}
service_account_file = /config/service_accounts/backup98-backup-objgxlrskxo5c8o3x9sm.json
{% elif ansible_hostname == "dmz" %}
service_account_file = /config/service_accounts/backup100-backup-objgxlrskxo5c8o3x9sm.json
{% endif %}

[alldebrid]
type = webdav
url = https://webdav.debrid.it
vendor = other
user = {{ RCLONE_ALLDEBRID_USER }}
pass = {{ RCLONE_ALLDEBRID_PASSWORD }}

[gdrive_crypt_0]
type = crypt
remote = gdrive_0:/crypt
filename_encryption = standard
directory_name_encryption = true
password = {{ RCLONE_GDRIVE_0_PASSWORD }}
password2 = {{ RCLONE_GDRIVE_0_PASSWORD_2 }}
{% if ansible_hostname == "nas" %}
service_account_file = /config/service_accounts/backup98-backup-objgxlrskxo5c8o3x9sm.json
{% elif ansible_hostname == "dmz" %}
service_account_file = /config/service_accounts/backup100-backup-objgxlrskxo5c8o3x9sm.json
{% endif %}

[streaming]
type = union
upstreams = gdrive_crypt_0:/:nc /0/local alldebrid:/
action_policy = epall
create_policy = eplfs
search_policy = ff
{# action_policy = ff
create_policy = eplfs
search_policy = ff #}

[brain]
type = union
upstreams = gdrive_crypt_0:/:nc alldebrid:/
action_policy = epall
create_policy = eplfs
search_policy = ff
{# action_policy = ff
create_policy = eplfs
search_policy = ff #}

[saunaflix]
type = union
upstreams = /0/local gdrive_crypt_0:/:nc alldebrid:/:nc
action_policy = epall
create_policy = eplfs
search_policy = ff

[backupservers]
type = union
upstreams = dmz:/rclone_mount:ro
action_policy = epall
create_policy = eplfs
search_policy = ff