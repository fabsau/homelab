# Host Settings
host_timezone: Europe/Berlin
docker_base_path: /docker2
docker_network_base_subnet: "172.30"
default_file_permission_mode: "770"
security_ssh_permit_root_login: "yes" # TODO REMOVE!
# Base Packages to install
base_packages:
  - ncdu
  - htop
  - nload
  - iotop
  - nano
  - cron
  - git
  - net-tools
  - dnsutils
  - iputils-ping
  - curl

# NFS Settings
nfs_mounts:
  - nfs_server: 192.168.100.3
    nfs_path: /Multimedia_Pictures
    mount_point: /nfs/pictures
    options: auto,nofail,noatime,nolock,intr,tcp,actimeo=1800

# Ansible Settings
ansible_home: "/home/fabio/VScode/workspace/homelab"
ansible_username: ansible
ansible_uid: "1000"
ansible_authorized_keys:
  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDTyxApASDloZwHr0clLERRnBkalpRDO5FYVqsW2EBT6DlXH4btXbAgubnhEiY5YOp9GhI9qv+vRfUBoAx84qt9k8W1xTV7p2pg/HWKYm3V0edGt26BiLsRYLgbo3VUpdwVsKYTeJSShYkfOLUB0w5mYE+ZsWH47BUhGbe3Gyz+/aBETRPnS6iPBUDXlX1B41l54EtnPB4YLqkEi3wMigPdgU2oirwotPl/udJOf3hPxzEMPxc6Hf+iNN4ZkQXu+KyGKy7mjM6uSEvTChMxPzJgiZfLdU3/i0XvqYp0CL03ngwi2PHIKe/fswLIzQvyB258N52RaNt0waxIwKLgn63dXgGXgyw9yM9LhyOeDjVPWAjrQeq9g47WwClH4heTfpJkvOVcOArbqHbVR4KUuq/9dqFLZxELHcD+xvQab92y1ieZyhf5aeBQ9epggkzjAaCQNw8sms/6KK82CWR/yZngzAKkuSkch0VDv0ZHdCDiet9q+WPSVCVXkNN1xhzsnVM= ansible

# Fabio Settings
fabio_username: fabio
fabio_uid: "500"
fabio_authorized_keys:
  - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAICEgae2MlRld7wI2e9UuDb/AX0NEiH5jRc86D3mX1EgU fabio

# Common ABC User Settings
common_username: abc
common_uid: "2000"
common_gid: "2000"
common_group: "abc"
common_group_gid: "2000"

# Admin Group
admin_group: admin
admin_gid: "1000"

# User Creation Settings
users_user_create: true
users_home_create: true
users_home: /home
users_home_mode: 700
users_shell: "/bin/bash"
users_authorized_keys_exclusive: true

# Creation of Users
users:
  - username: "{{ ansible_username }}"
    password: "{{ USER_ANSIBLE_PASSWORD }}"
    state: present
    primary_group: "{{ admin_group }}"
    groups:
      - "{{ admin_group }}"
      - docker
    uid: "{{ ansible_uid }}"
    expires: -1
    sudoer: yes
    authorized_keys: "{{ ansible_authorized_keys }}"
    lock: no
  - username: "{{ fabio_username }}"
    password: "{{ USER_FABIO_PASSWORD }}"
    state: present
    primary_group: "{{ admin_group }}"
    groups:
      - "{{ admin_group }}"
      - docker
    uid: "{{ fabio_uid }}"
    expires: -1
    sudoer: yes
    authorized_keys: "{{ fabio_authorized_keys }}"
    lock: no
  - username: "{{ common_username }}"
    password: "{{ USER_COMMON_PASSWORD }}"
    state: present
    primary_group: "{{ common_group }}"
    groups:
      - "{{ common_group }}"
    uid: "{{ common_uid }}"
    expires: -1
    sudoer: no
    authorized_keys: []
    lock: no

# Group Creation and User Assignment
group_management:
  - name: "{{ admin_group }}"
    gid: "{{ admin_gid }}"
    users: 
      - "root"
  - name: "{{ common_group }}"
    gid: "{{ common_group_gid }}"
    users:
      - root
      - "{{ ansible_username }}"
      - "{{ fabio_username }}"

# Removal of Users and Groups
users_remove: []
groups_remove: []

security_ssh_allowed_groups:
  - "{{ admin_group }}"
security_ssh_allowed_users:
  - "{{ ansible_username }}"
  - "{{ fabio_username }}"
  - root # TODO REMOVE!

fail2ban_bantime: 600
fail2ban_findtime: 600
fail2ban_maxretry: 5

# Logrotate Settings
logrotate_user: "{{ common_username }}"
logrotate_group: "{{ common_group }}"
logrotate_frequency: weekly
logrotate_keep: 14
logrotate_compress: yes
logrotate_entries:
  - name: traefik_access_log
    path: "{{ docker_base_path }}/traefik/data/log/access.log"
  - name: traefik_app_log
    path: "{{ docker_base_path }}/traefik/data/log/traefik.log"

# DNS Servers
dns_servers:
  - 192.168.100.20
  - 192.168.100.21

# Adguard Sync Settings
adguardsync_schedule: "*/2 * * * *"
adguardsync_user: "{{ ADGUARD_USER }}"
adguardsync_password: "{{ ADGUARD_PASSWORD }}"

# Prometheus Settings
prometheus_global:
  scrape_interval: '1m'
  scrape_timeout: "1m"
prometheus_alert_rules_files:
  - "alerts.yml"

# Endpoints
endpoint_hosts:
  nas:
    ip:
      - "192.168.100.3"
      - "100.64.0.3"
    open_ports:
      - 22
      - 80
      - 443
    docker_connection:
      type: "socket"
      path: "/var/run/docker.sock"
      id: 1
  dmz:
    ip:
      - "192.168.200.2"
    docker_connection:
      type: "tcp"
      path: "http://192.168.200.2:2375"
      id: 2
  BLUE:
    ip:
      - "195.90.219.248"
      - "192.168.251.4"
      - "100.64.0.1"
    open_ports:
      - 22
      - 80
      - 443
      - 1080 # Proxy
      - 2375 # Dockerproxy
      - 32400 # Plex
      - 34400 # Xteve-de
      - 8080 # Sabnzbd
      - 8090 # Librespeed
      - 5572 # Rclone
      - 9001 # Portainer
    docker_connection:
      type: "tcp"
      path: "http://100.64.0.1:2375"
      id: 3
  # azure:
  #   ip:
  #       - "172.187.202.93"
  #       - "192.168.251.6"
  lxc1:
    ip:
      - "192.168.100.20"
    dns: true
  lxc2:
    ip:
      - "192.168.100.21"
    dns: true


endpoints:
  adguard:
    lxc1: "dns.oiba.de"
    lxc2: "dns2.oiba.de"
    BLUE: "dns.blue.sauna.re"
  adguardexporter:
    nas: "adguardexporter.oiba.de"
    prometheus_exporter: true
    uptimekuma_monitoring: false
  alertmanager:
    nas: "alert.oiba.de"
    dmz: "alert.sauna.re"
    prometheus_exporter: true
  authelia:
    dmz: "auth.sauna.re"
  bazarrexporter:
    nas: "bazarrexporter.oiba.de"
  bazarr:
    dmz: "bazarr.sauna.re"
  cadvisor:
    nas: "cadvisor.nas.oiba.de"
    dmz: "cadvisor.azure.sauna.re"
    BLUE: "cadvisor.blue.sauna.re"
    prometheus_exporter: true
  calibre_web:
    dmz: "read.sauna.re"
  changedetection:
    nas: "change.oiba.de"
  ciscoswitch:
    nas: "switch.oiba.de"
    traefik_extra_server: true
  codeserver:
    nas: "code.oiba.de"
  czkawka:
    nas: "files.oiba.de"
  demo-dhbwgpt:
    dmz: "demo-dhbwgpt.sauna.re"
  dockge:
    nas: "dockge.oiba.de"
    dmz: "dockge.azure.sauna.re"
    BLUE: "dockge.blue.sauna.re"
  ferdium:
    dmz: "ferdium.sauna.re"
  filebrowser:
    dmz: "files.sauna.re"
  fritzbox:
    nas: "fritz.oiba.de"
    traefik_extra_server: true
  ghost:
    dmz: "fabio.sauna.re"
  grafana:
    nas: "grafana.oiba.de"
  headscale:
    dmz: "headscale.sauna.re"
  homeassistant:
    dmz: "home.sauna.re"
    traefik_extra_server: true
  homer:
    dmz: "home.sauna.re"
  ihatemoney:
    dmz: "money.sauna.re"
  inputforms:
    nas: "forms.oiba.de"
  it-tools:
    dmz: "tools.sauna.re"
  johanna-liebt-fabio:
    dmz: "johanna-liebt-fabio.sauna.re"
  librechat:
    dmz: "chat.sauna.re"
  librespeed:
    nas: "speed.nas.oiba.de"
    dmz: "speed.azure.sauna.re"
    BLUE: "speed.blue.sauna.re"
  librespeedexporter:
    nas: "librespeedexporter.oiba.de"
    prometheus_exporter: true
    prometheus_settings:
      scrape_interval: "6h"
      scrape_timeout: "10m"
      metrics_path: "/probe"
      params:
        script: "librespeed"
  limesurvey:
    nas: "survey.oiba.de"
    dmz: "survey.sauna.re"
  linkhub:
    dmz: "portal.sauna.re"
  nodeexporter:
    nas: "node.nas.oiba.de"
    dmz: "node.azure.sauna.re"
    BLUE: "node.blue.sauna.re"
    opn: "node.opn.oiba.de"
    home: "node.home.oiba.de"
    prometheus_exporter: true
  openmediavault:
    nas: "nas.oiba.de"
    traefik_extra_server: true
  opnsense:
    nas: "opn.oiba.de"
    traefik_extra_server: true
  overseerr:
    dmz: "request.sauna.re"
  pairdrop:
    nas: "send.oiba.de"
  paperless:
    nas: "paper.oiba.de"
  photoprism:
    dmz: "photo.sauna.re"
  plausible:
    dmz: "data.sauna.re"
  plausibleexporter:
    nas: "plausibleexporter.oiba.de"
    prometheus_exporter: true
  plex:
    BLUE: "watch.sauna.re"
  plexexporter:
    nas:
      - "plexexporter.oiba.de"
      - "plexexporter2.oiba.de"
      - "plexexporter3.oiba.de"
    prometheus_exporter: true
  portainer:
    nas: "docker.oiba.de"
  prowlarr:
    dmz: "prowlarr.sauna.re"
  prowlarrexporter:
    nas: "prowlarrexporter.oiba.de"
    prometheus_exporter: true
  prometheus:
    nas: "prom.oiba.de"
    dmz: "prom.sauna.re"
    prometheus_exporter: true
  proxmox:
    nas: "vm.oiba.de"
    traefik_extra_server: true
  proxbak:
    nas: "backup.oiba.de"
    traefik_extra_server: true
  proxmoxexporter:
    nas: "proxmoxexporter.oiba.de"
    target_replacement_url:
      - "vm.oiba.de:443"
    prometheus_exporter: true
    prometheus_settings:
      metrics_path: "/pve"
      params:
        module: "default"
        cluster: "1"
        node: "1"
      relabel_configs:
        - replacement: proxmoxexporter.oiba.de
  pyload:
    nas: "pyload.oiba.de"
  qbittorrent:
    BLUE: "torrent.sauna.re"
  qbittorrentexporter:
    nas: "qbittorrentexporter.oiba.de"
    prometheus_exporter: true
  radarr:
    dmz: "radarr.sauna.re"
  radarrexporter:
    nas: "radarrexporter.oiba.de"
    prometheus_exporter: true
  rancher:
    nas: "rancher.oiba.de"
  rclone:
    nas: "rclone.oiba.de"
    BLUE: "rclone.blue.sauna.re"
    dmz: "rclone.azure.sauna.re"
  sabnzbd:
    BLUE: "usenet.sauna.re"
  sabnzbdexporter:
    nas: "sabnzbdexporter.oiba.de"
    prometheus_exporter: true
  searx:
    dmz: "searx.sauna.re"
  sonarr:
    dmz: "sonarr.sauna.re"
  sonarrexporter:
    nas: "sonarrexporter.oiba.de"
    prometheus_exporter: true
  spotify:
    dmz:
      - "spotify-api.sauna.re"
      - "spotify.sauna.re"
  tandoorrecipes:
    nas: "recipes.oiba.de"
    prometheus_exporter: true
  tautulli:
    dmz: "tulli.sauna.re"
  tautulliexporter:
    nas: "tautulliexporter.oiba.de"
    prometheus_exporter: true
  traefik:
    nas: "proxy.oiba.de"
    dmz: "proxy.azure.sauna.re"
    BLUE: "proxy.blue.sauna.re"
    prometheus_exporter: true
  unifi:
    nas: "unifi.oiba.de"
    uptimekuma_container:
        unifi_mariadb:
          docker_connection_host: "nas"
  unifi2:
    uptimekuma_container:
        unifi_mariadb2:
          docker_connection_host: "nas"
  unifiexporter:
    nas: "unifiexporter.oiba.de"
    prometheus_exporter: true
  uptimekuma:
    nas: "uptime.oiba.de"
    prometheus_exporter: true
    prometheus_settings:
      basic_auth:
        username: "{{ PROMETHEUS_UPTIMEKUMA_USER }}"
        password: "{{ PROMETHEUS_UPTIMEKUMA_PASSWORD }}"
  uptimekuma-saunaflix:
    dmz: "status.sauna.re"
  urbackup:
    nas: "backup.oiba.de"
  urbackupexporter:
    nas: "urbackupexporter.oiba.de"
    prometheus_exporter: true
  backuppc:
    nas: "backup2.oiba.de"
  duplicacy:
    nas: "backup3.oiba.de"
  vacuum:
    nas: "vacuum.oiba.de"
    uptimekuma_monitor: false
    traefik_extra_server: true
  valetudo:
    nas: "valetudo.oiba.de"
    uptimekuma_monitor: false
  vaultwarden:
    dmz:
      - "bitwarden.sauna.re"
      - "bitwarden2.sauna.re"
  vscode:
    nas: "code.oiba.de"
  wallos:
    nas: "wallos.oiba.de"
  watchtower:
    nas: "watchtower.oiba.de"
    dmz: "watchtower.azure.sauna.re"
    BLUE: "watchtower.blue.sauna.re"
    prometheus_exporter: true
    prometheus_settings:
      metrics_path: "/v1/metrics"
      bearer_token: "{{ WATCHTOWER_HTTP_API_TOKEN }}"
  wizarr:
    dmz: "setup.sauna.re"
  xbackbone:
    dmz: "screen.sauna.re"
  xteve:
    BLUE: "xteve-de.sauna.re"