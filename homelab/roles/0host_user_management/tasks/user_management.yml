# /config/workspace/homelab/roles/0host_user_management/tasks/user_management.yml
- name: Set service name variable
  set_fact:
    ssh_service_name: "{{ 'ssh' if ansible_os_family == 'Debian' else 'sshd' }}"

- name: Create group for user if specified
  group:
    name: "{{ current_user.group | default(users_group) }}"
    gid: "{{ current_user.gid | default(omit) }}"
    state: present
  become: true
  when: current_user.gid is defined

- name: Create users and manage their attributes
  user:
    name: "{{ current_user.username }}"
    uid: "{{ current_user.uid | default(omit) }}"
    password: "{{ current_user.password | password_hash('sha512') }}"
    state: "{{ current_user.state | default('present') }}"
    group: "{{ current_user.group | default(users_group) }}"
    groups: "{{ current_user.groups | default(users_groups) }}"
    append: yes
    home: "{{ current_user.home | default(users_home + '/' + current_user.username) }}"
    createhome: "{{ current_user.home_create | default(users_home_create) }}"
    expires: "{{ current_user.expires | default(-1) }}"
    shell: "{{ current_user.shell | default(users_shell) }}"
  become: true

- name: Set home directory permissions for users
  file:
    path: "{{ current_user.home | default(users_home + '/' + current_user.username) }}"
    mode: "{{ current_user.home_mode | default(users_home_mode) }}"
  become: true

- name: Add users to sudoers if specified
  template:
    src: sudoers.j2
    dest: "/etc/sudoers.d/{{ current_user.username }}"
    validate: 'visudo -cf %s'
  vars:
    user: "{{ current_user }}"
  when: current_user.state == 'present' and current_user.sudoer == true
  become: true
  notify: Restart SSH Service

- name: Manage SSH keys for users
  authorized_key:
    user: "{{ current_user.username }}"
    state: "{{ current_user.state }}"
    key: "{{ item }}"
    exclusive: "{{ current_user.ssh_keys_exclusive | default(users_authorized_keys_exclusive) }}"
  with_items: "{{ current_user.authorized_keys }}"
  when: current_user.authorized_keys is defined
  become: true
  become_user: "{{ current_user.username }}"

- name: Lock/unlock user account based on user.lock
  command: "{{ 'passwd -l ' + current_user.username if current_user.lock else 'passwd -u ' + current_user.username }}"
  become: true
  when: current_user.lock is defined
