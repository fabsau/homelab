---
- hosts: localhost
  roles:
    - variables
  vars:
    uptime_kuma_api_url: "https://uptime.sauna.re"
    monitor_type: "HTTP"
  tasks:

    - name: Add docker host for {{ item.key }}
      lucasheld.uptime_kuma.docker_host:
        api_url: "{{ uptime_kuma_api_url }}"
        name: "{{ item.key | upper }}"
        dockerType: "{{ item.value.docker_connection.type }}"
        dockerDaemon: "{{ item.value.docker_connection.path }}"
      loop: "{{ lookup('dict', endpoint_hosts) }}"
      when: item.value.docker_connection is defined
    
    - name: Remove docker host for {{ item.key }}
      lucasheld.uptime_kuma.docker_host:
        api_url: "{{ uptime_kuma_api_url }}"
        name: "{{ item.key | upper }}"
        state: absent
      loop: "{{ lookup('dict', endpoint_hosts) }}"
      when: item.value.docker_connection is not defined
    
    - name: Generate the monitor list from the endpoints
      set_fact:
        defined_monitor_list: >-
          [
            {% for host, details in endpoint_hosts.items() %}
              {% if details.uptimekuma_monitoring is not defined or details.uptimekuma_monitoring != false %}
                {"name": "{{ host | upper }}", "type": "group"},
                {"name": "{{ host | upper }} PING", "parent_host": "{{ host | upper }}", "ip": "{{ details.ip }}", "type": "ping"},
                {% if details.open_ports is defined %}
                  {% for port in details.open_ports %}
                    {"name": "{{ host | upper }} PORT {{ port }}", "parent_host": "{{ host | upper }}", "ip": "{{ details.ip }}", "port": "{{ port }}", "type": "port"},
                  {% endfor %}
                {% endif %}
              {% endif %}
            {% endfor %}
            
            {% for service, details in endpoints.items() %}
              {% if details.uptimekuma_monitoring is not defined or details.uptimekuma_monitoring != false %}
                {% for host, url in details.items() %}
                  {% if host in endpoint_hosts %}
                    {% if url is string %}
                      {"name": "{{ service | capitalize }} HTTP ({{ host | upper }})", "parent_host": "{{ host | upper }}", "url": "https://{{ url }}", "type": "http"},
                    {% else %}
                      {% for u in url %}
                        {"name": "{{ service | capitalize }}{% if loop.index > 1 %} {{ loop.index }}{% endif %} HTTP ({{ host | upper }})", "parent_host": "{{ host | upper }}", "url": "https://{{ u }}", "type": "http"},
                      {% endfor %}
                    {% endif %}
                  {% endif %}
                {% endfor %}
              {% endif %}
            {% endfor %}
          ]


    - name: Get all monitors setup in UptimeKuma
      lucasheld.uptime_kuma.monitor_info:
        api_url: "{{ uptime_kuma_api_url }}"
      register: existing_monitors

    # - name: Debug existing_monitors
    #   debug:
    #     var: existing_monitors

    - name: Find common entries in monitor_list and existing_monitors
      set_fact:
        common_entries: >-
          {%- set result = [] -%}
          {%- for new_monitor in defined_monitor_list -%}
            {%- for existing_monitor in existing_monitors.monitors -%}
              {%- if new_monitor.name == existing_monitor.name and new_monitor.type == existing_monitor.type -%}
                {%- if new_monitor.type == 'http' and new_monitor.url == existing_monitor.url -%}
                  {%- set _ = result.append(new_monitor) -%}
                {%- endif -%}
                {%- if new_monitor.type == 'ping' and new_monitor.ip == existing_monitor.hostname -%}
                  {%- set _ = result.append(new_monitor) -%}
                {%- endif -%}
                {%- if new_monitor.type == 'port' and new_monitor.ip == existing_monitor.hostname and new_monitor.port == existing_monitor.port -%}
                  {%- set _ = result.append(new_monitor) -%}
                {%- endif -%}
                {%- if new_monitor.type == 'group' -%}
                  {%- set _ = result.append(new_monitor) -%}
                {%- endif -%}
              {%- endif -%}
            {%- endfor -%}
          {%- endfor -%}
          {{ result }}

    - name: Create missing monitors
      lucasheld.uptime_kuma.monitor:
        api_url: "{{ uptime_kuma_api_url }}"
        name: "{{ item.name }}"
        type: "{{ item.type }}"
        parent_name: "{{ item.parent_host | default(omit) }}"
        hostname: "{{ item.ip | default(omit) }}"
        port: "{{ item.port | default(omit) }}"
        url: "{{ item.url | default(omit) }}"
        state: present
      loop: "{{ defined_monitor_list }}"
      when: "item not in common_entries"

    # - name: Delete undefined monitors
    #   lucasheld.uptime_kuma.monitor:
    #     api_url: "{{ uptime_kuma_api_url }}"
    #     name: "{{ item.name }}"
    #     type: "{{ item.type }}"
    #     state: absent
    #   loop: "{{ existing_monitors.monitors }}"
    #   when: >-
    #     defined_monitor_list | selectattr('name', 'equalto', item.name) | selectattr('type', 'equalto', item.type) | list | length == 0

    - name: Test Container Monitor
      lucasheld.uptime_kuma.monitor:
        api_url: "{{ uptime_kuma_api_url }}"
        name: "Container 123 Test"
        type: "docker"
        docker_container: "test"
        docker_host_name: NAS
        state: present